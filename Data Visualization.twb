<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0721.1350                               -->
<workbook original-version='18.1' source-build='2020.2.4 (20202.20.0721.1350)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='output' inline='true' name='federated.1hxtzms0nd3ci118nvyex0q4cqhv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='output' name='textscan.1tdufrq0i9icvn1exw57y1oh85er'>
            <connection class='textscan' directory='C:/Users/Mengfei/Desktop' filename='output.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1tdufrq0i9icvn1exw57y1oh85er' name='output.csv' table='[output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Model' ordinal='0' />
            <column datatype='real' name='Train Accuracy' ordinal='1' />
            <column datatype='real' name='Test Accuracy' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1tdufrq0i9icvn1exw57y1oh85er' name='output.csv' table='[output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Model' ordinal='0' />
            <column datatype='real' name='Train Accuracy' ordinal='1' />
            <column datatype='real' name='Test Accuracy' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[output.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[output.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[output.csv_40B1F6DD2B1E44A1931F2DC4D028BFEC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Train Accuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Train Accuracy]</local-name>
            <parent-name>[output.csv]</parent-name>
            <remote-alias>Train Accuracy</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[output.csv_40B1F6DD2B1E44A1931F2DC4D028BFEC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Test Accuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Test Accuracy]</local-name>
            <parent-name>[output.csv]</parent-name>
            <remote-alias>Test Accuracy</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[output.csv_40B1F6DD2B1E44A1931F2DC4D028BFEC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Test Accuracy]' role='measure' type='quantitative' />
      <column datatype='real' name='[Train Accuracy]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='output.csv' datatype='table' name='[__tableau_internal_object_id__].[output.csv_40B1F6DD2B1E44A1931F2DC4D028BFEC]' role='measure' type='quantitative' />
      <column-instance column='[Test Accuracy]' derivation='Sum' name='[sum:Test Accuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Train Accuracy]' derivation='Sum' name='[sum:Train Accuracy:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[sum:Train Accuracy:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[sum:Test Accuracy:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='output.csv' id='output.csv_40B1F6DD2B1E44A1931F2DC4D028BFEC'>
            <properties context=''>
              <relation connection='textscan.1tdufrq0i9icvn1exw57y1oh85er' name='output.csv' table='[output#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Model' ordinal='0' />
                  <column datatype='real' name='Train Accuracy' ordinal='1' />
                  <column datatype='real' name='Test Accuracy' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{842D561B-C591-45F1-A47D-DCE9ED2CEE3A}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Model Accuracy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='federated.1hxtzms0nd3ci118nvyex0q4cqhv' />
          </datasources>
          <datasource-dependencies datasource='federated.1hxtzms0nd3ci118nvyex0q4cqhv'>
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='real' name='[Test Accuracy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Train Accuracy]' role='measure' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Test Accuracy]' derivation='Sum' name='[sum:Test Accuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Train Accuracy]' derivation='Sum' name='[sum:Train Accuracy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <alphabetic-sort column='[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[:Measure Names]' direction='DESC' />
          <filter class='categorical' column='[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[none:Model:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Model:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Model:nk]' member='&quot;MobileNetV2_3Layers&quot;' />
                <groupfilter function='member' level='[none:Model:nk]' member='&quot;MobileNetV2_5Layers&quot;' />
                <groupfilter function='member' level='[none:Model:nk]' member='&quot;MobileNetV2_Benchmark&quot;' />
                <groupfilter function='member' level='[none:Model:nk]' member='&quot;VGG19_3Layers&quot;' />
                <groupfilter function='member' level='[none:Model:nk]' member='&quot;VGG19_Benchmark&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[sum:Test Accuracy:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[:Measure Names]' value='124' />
            <format attr='width' field='[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[none:Model:nk]' value='260' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[sum:Train Accuracy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[sum:Test Accuracy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1hxtzms0nd3ci118nvyex0q4cqhv].[none:Model:nk] / [federated.1hxtzms0nd3ci118nvyex0q4cqhv].[:Measure Names])</rows>
        <cols>([federated.1hxtzms0nd3ci118nvyex0q4cqhv].[sum:Train Accuracy:qk] + [federated.1hxtzms0nd3ci118nvyex0q4cqhv].[sum:Test Accuracy:qk])</cols>
      </table>
      <simple-id uuid='{B3381C44-0718-4908-AAB7-1574BEE1465B}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{254777D5-8C37-4162-B504-24AA26921004}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[:Measure Names]</field>
            <field>[federated.1hxtzms0nd3ci118nvyex0q4cqhv].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BCA3E88B-434B-47D5-AB71-B879B18F1D2C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
